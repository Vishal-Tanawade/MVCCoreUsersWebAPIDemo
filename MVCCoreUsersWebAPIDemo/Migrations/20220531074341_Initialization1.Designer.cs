// <auto-generated />
using MVCCoreUsersWebAPIDemo.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCCoreUsersWebAPIDemo.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220531074341_Initialization1")]
    partial class Initialization1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCCoreUsersWebAPIDemo.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "Sincere@april.biz",
                            name = "Leanne Graham",
                            phone = "1-770-736-8031",
                            username = "Bret",
                            website = "hildegard.org"
                        },
                        new
                        {
                            id = 2,
                            email = "Shanna@melissa.tv",
                            name = "Ervin Howell",
                            phone = "010-692-6593",
                            username = "Antonette",
                            website = "anastasia.net"
                        },
                        new
                        {
                            id = 3,
                            email = "Nathan@yesenia.net",
                            name = "Clementine Bauch",
                            phone = "1-463-123-4447",
                            username = "Samantha",
                            website = "ramiro.info"
                        },
                        new
                        {
                            id = 4,
                            email = "Julianne.OConner@kory.org",
                            name = "Patricia Lebsack",
                            phone = "493-170-9623",
                            username = "Karianne",
                            website = "kale.biz"
                        },
                        new
                        {
                            id = 5,
                            email = "Lucio_Hettinger@annie.ca",
                            name = "Chelsey Dietrich",
                            phone = "(254)954-1289",
                            username = "Kamren",
                            website = "demarco.info"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
